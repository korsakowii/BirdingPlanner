version: '3.8'

services:
  birdingplanner:
    build: .
    container_name: birdingplanner
    ports:
      - "8000:8000"
    volumes:
      - ./output:/app/output
      - ./data:/app/data
    environment:
      - ENVIRONMENT=production
      - LOG_LEVEL=INFO
      - API_HOST=0.0.0.0
      - API_PORT=8000
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Optional: Add a database service for future use
  # postgres:
  #   image: postgres:13
  #   container_name: birdingplanner_db
  #   environment:
  #     POSTGRES_DB: birdingplanner
  #     POSTGRES_USER: birdingplanner
  #     POSTGRES_PASSWORD: birdingplanner_pass
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #   ports:
  #     - "5432:5432"
  #   restart: unless-stopped

  # Optional: Add Redis for caching
  # redis:
  #   image: redis:6-alpine
  #   container_name: birdingplanner_redis
  #   ports:
  #     - "6379:6379"
  #   restart: unless-stopped

volumes:
  postgres_data: 